// main.js

// WebSocket connection
const socket = new WebSocket("wss://localhost:8088");

// STOMP client
const stompClient = Stomp.over(socket);

// Event listener for WebSocket connection
socket.onopen = function() {
    console.log("WebSocket connection established.");

    // Connect to STOMP endpoint
    stompClient.connect({}, function(frame) {
        console.log("Connected to STOMP.");

        // Subscribe to chat topic
        stompClient.subscribe("/topic/chat", function(message) {
            let chatMessage = JSON.parse(message.body);
            // Handle received message
            handleMessage(chatMessage);
        });
    });
};

// Event listener for WebSocket errors
socket.onerror = function(error) {
    console.error("WebSocket error: ", error);
};

// Function to send a chat message
function sendMessage(roomId, writer, message) {
    let chatMessage = {
        roomId: roomId,
        writer: writer,
        message: message
    };
    // Send message to server using STOMP
    stompClient.send("/app/chat/sendMessage", {}, JSON.stringify(chatMessage));
}

// Function to handle received chat message
function handleMessage(message) {
    // Display the received chat message in the UI
    const chatLogs = document.getElementById("chat-logs");
    const chatMessage = document.createElement("div");
    chatMessage.classList.add("chat-message");
    chatMessage.innerHTML = "<strong>" + message.writer + ":</strong> " + message.message;
    chatLogs.appendChild(chatMessage);
    // Scroll to the bottom of the chat logs
    chatLogs.scrollTop = chatLogs.scrollHeight;
}

// Example usage
let roomId = "your-room-id";
let writer = "John";
let message = "Hello, chat!";
sendMessage(roomId, writer, message);
